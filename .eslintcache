[{"D:\\Bootcamp2020\\space-x\\src\\App.tsx":"1","D:\\Bootcamp2020\\space-x\\src\\serviceWorker.ts":"2","D:\\Bootcamp2020\\space-x\\src\\index.tsx":"3","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchInfo.tsx":"4","D:\\Bootcamp2020\\space-x\\src\\generated\\graphql.tsx":"5","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchList.tsx":"6","D:\\Bootcamp2020\\space-x\\src\\apolloClient.ts":"7","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchListContainer.tsx":"8","D:\\Bootcamp2020\\space-x\\src\\ap.tsx":"9","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchProfileContainer.tsx":"10","D:\\Bootcamp2020\\space-x\\src\\reportWebVitals.ts":"11"},{"size":2684,"mtime":1608409220207,"results":"12","hashOfConfig":"13"},{"size":5528,"mtime":1608317197290,"results":"14","hashOfConfig":"13"},{"size":904,"mtime":1608404965474,"results":"15","hashOfConfig":"13"},{"size":1413,"mtime":1607974181463,"results":"16","hashOfConfig":"13"},{"size":25662,"mtime":1608320130520,"results":"17","hashOfConfig":"13"},{"size":2013,"mtime":1608412696798,"results":"18","hashOfConfig":"13"},{"size":1125,"mtime":1608152200914,"results":"19","hashOfConfig":"13"},{"size":474,"mtime":1608320620228,"results":"20","hashOfConfig":"13"},{"size":1546,"mtime":1608412003637,"results":"21","hashOfConfig":"13"},{"size":681,"mtime":1608141679760,"results":"22","hashOfConfig":"13"},{"size":425,"mtime":1607460957673,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19ioad5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Bootcamp2020\\space-x\\src\\App.tsx",["51","52","53","54","55","56"],"D:\\Bootcamp2020\\space-x\\src\\serviceWorker.ts",[],"D:\\Bootcamp2020\\space-x\\src\\index.tsx",["57","58"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ApolloProvider,ApolloClient, InMemoryCache} from '@apollo/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as swDev from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst client = new ApolloClient({\n  uri: 'https://spacexdata.herokuapp.com/graphql',\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <ApolloProvider client={client}> */}\n      <App />\n    {/* </ApolloProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// serviceWorker.register()\nswDev.register();",["59","60"],"D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchInfo.tsx",[],["61","62"],"D:\\Bootcamp2020\\space-x\\src\\generated\\graphql.tsx",[],"D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchList.tsx",[],"D:\\Bootcamp2020\\space-x\\src\\apolloClient.ts",[],"D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchListContainer.tsx",["63"],"D:\\Bootcamp2020\\space-x\\src\\ap.tsx",["64","65","66","67","68","69"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport { LaunchListContainer } from \"./components/LaunchList/LaunchListContainer\";\r\nimport { LaunchInfoContainer } from \"./components/LaunchInfo/LaunchProfileContainer\";\r\nimport { LaunchList } from \"./components/LaunchList/LaunchList\";\r\nimport { LaunchInfo } from \"./components/LaunchInfo/LaunchInfo\";\r\nimport getApolloClient from \"./apolloClient\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport Logo from './assets/logo.png'\r\nfunction Ap() {\r\n  const [id, setId] = useState(42);\r\n  const handleIdChange = useCallback((newId) => {\r\n    setId(newId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('render');\r\n    \r\n  }, [])\r\n\r\n//   const [client, setClient] = useState(null)\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//   useEffect(() => {\r\n//     getApolloClient().then((client) => {\r\n//       setClient(client as any)\r\n//       setLoading(false)\r\n//       console.log(client);\r\n      \r\n//     })\r\n//   }, [])\r\n\r\n//   if (loading || !client) {\r\n//     return (\r\n//       <div >\r\n//         <h1>Loading...</h1>\r\n//       </div>\r\n//     )\r\n//   }\r\n\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"logo\" width={600} />\r\n      {/* <h1 className=\"text-center text-white\">Space-X</h1> */}\r\n      <LaunchListContainer handleIdChange={handleIdChange} />\r\n       {/* <LaunchInfoContainer id={id} /> */}\r\n       {/* <LaunchList handleIdChange={handleIdChange} />\r\n       <LaunchInfo id={id} /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Ap;\r\n","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchProfileContainer.tsx",["70"],"import React, { useEffect } from \"react\";\r\n\r\nimport { useLaunchInfoQuery } from \"../../generated/graphql\";\r\nimport { LaunchInfo } from \"./LaunchInfo\";\r\n\r\ninterface OwnProps {\r\n  id: number;\r\n}\r\n\r\nexport const LaunchInfoContainer = ({ id }: OwnProps) => {\r\n  console.log('id',id);\r\n  \r\n  const { data, error, loading,refetch } = useLaunchInfoQuery({\r\n    variables: { id: String(id) },\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <h3>Loading...</h3>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h3>Error</h3>;\r\n  }\r\n\r\n  if (!data) {\r\n    return <h3>Select a flight</h3>;\r\n  }\r\n  console.log(data);\r\n\r\n  return <LaunchInfo data={data} />;\r\n};\r\n","D:\\Bootcamp2020\\space-x\\src\\reportWebVitals.ts",[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":28},{"ruleId":"71","severity":1,"message":"75","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":29},{"ruleId":"71","severity":1,"message":"76","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":29},{"ruleId":"71","severity":1,"message":"77","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":20},{"ruleId":"71","severity":1,"message":"79","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":23},{"ruleId":"71","severity":1,"message":"80","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":23},{"ruleId":"71","severity":1,"message":"81","line":10,"column":7,"nodeType":"73","messageId":"74","endLine":10,"endColumn":13},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"71","severity":1,"message":"88","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":23},{"ruleId":"71","severity":1,"message":"76","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":29},{"ruleId":"71","severity":1,"message":"77","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":20},{"ruleId":"71","severity":1,"message":"79","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":23},{"ruleId":"71","severity":1,"message":"80","line":9,"column":10,"nodeType":"73","messageId":"74","endLine":9,"endColumn":24},{"ruleId":"71","severity":1,"message":"89","line":12,"column":10,"nodeType":"73","messageId":"74","endLine":12,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":19,"column":6,"nodeType":"92","endLine":19,"endColumn":10,"suggestions":"93"},"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'LaunchListContainer' is defined but never used.","'LaunchInfoContainer' is defined but never used.","'LaunchList' is defined but never used.","'LaunchInfo' is defined but never used.","'getApolloClient' is defined but never used.","'ApolloProvider' is defined but never used.","'client' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],"'LaunchesQuery' is defined but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [id, refetch]",{"range":"99","text":"100"},[437,441],"[id, refetch]"]