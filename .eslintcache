[{"D:\\Bootcamp2020\\space-x\\src\\App.tsx":"1","D:\\Bootcamp2020\\space-x\\src\\serviceWorker.ts":"2","D:\\Bootcamp2020\\space-x\\src\\index.tsx":"3","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchInfo.tsx":"4","D:\\Bootcamp2020\\space-x\\src\\generated\\graphql.tsx":"5","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchList.tsx":"6","D:\\Bootcamp2020\\space-x\\src\\apolloClient.ts":"7","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchListContainer.tsx":"8","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchProfileContainer.tsx":"9","D:\\Bootcamp2020\\space-x\\src\\reportWebVitals.ts":"10","D:\\Bootcamp2020\\space-x\\src\\components\\Loader\\Loader.tsx":"11"},{"size":1902,"mtime":1608584767148,"results":"12","hashOfConfig":"13"},{"size":4845,"mtime":1608585837260,"results":"14","hashOfConfig":"13"},{"size":1059,"mtime":1608669719040,"results":"15","hashOfConfig":"13"},{"size":1396,"mtime":1608665903294,"results":"16","hashOfConfig":"13"},{"size":25662,"mtime":1608320130520,"results":"17","hashOfConfig":"13"},{"size":1735,"mtime":1608585394661,"results":"18","hashOfConfig":"13"},{"size":1125,"mtime":1608152200914,"results":"19","hashOfConfig":"13"},{"size":449,"mtime":1608585854989,"results":"20","hashOfConfig":"13"},{"size":741,"mtime":1608585845116,"results":"21","hashOfConfig":"13"},{"size":425,"mtime":1607460957673,"results":"22","hashOfConfig":"13"},{"size":127,"mtime":1608582559623,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19ioad5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Bootcamp2020\\space-x\\src\\App.tsx",["50"],"D:\\Bootcamp2020\\space-x\\src\\serviceWorker.ts",[],["51","52"],"D:\\Bootcamp2020\\space-x\\src\\index.tsx",["53","54","55"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ApolloProvider,ApolloClient, InMemoryCache} from '@apollo/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as swDev from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport getApolloClient from './apolloClient';\n// const client = new ApolloClient({\n//   uri: 'https://spacexdata.herokuapp.com/graphql',\n//   cache: new InMemoryCache()\n// })\n\nconst client =  getApolloClient().then((client:any) => {\n  if (client) {\n    ReactDOM.render(\n      <React.StrictMode>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  }\n})\n\n\nreportWebVitals();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// serviceWorker.register()\nswDev.register();\n","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchInfo.tsx",[],"D:\\Bootcamp2020\\space-x\\src\\generated\\graphql.tsx",[],"D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchList.tsx",[],"D:\\Bootcamp2020\\space-x\\src\\apolloClient.ts",[],"D:\\Bootcamp2020\\space-x\\src\\components\\LaunchList\\LaunchListContainer.tsx",["56"],"import React from \"react\";\r\n\r\nimport { LaunchesQuery, useLaunchesQuery } from \"../../generated/graphql\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { LaunchList } from \"./LaunchList\";\r\n\r\nexport const LaunchListContainer = () => {\r\n  const { data, error, loading } = useLaunchesQuery();\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error || !data) {\r\n    return <h3>Error</h3>;\r\n  }\r\n\r\n  return <LaunchList data={data} />;\r\n};\r\n","D:\\Bootcamp2020\\space-x\\src\\components\\LaunchInfo\\LaunchProfileContainer.tsx",["57"],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useLaunchInfoQuery } from \"../../generated/graphql\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { LaunchInfo } from \"./LaunchInfo\";\r\n\r\ninterface ParamTypes {\r\n  id: string;\r\n}\r\n\r\nexport const LaunchInfoContainer = () => {\r\n  const { id } = useParams<ParamTypes>();\r\n  const { data, error, loading,refetch } = useLaunchInfoQuery({\r\n    variables: { id: String(id) },\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <h3>Error</h3>;\r\n  }\r\n\r\n  if (!data) {\r\n    return <h3>Select a flight</h3>;\r\n  }\r\n\r\n  return <LaunchInfo data={data} />;\r\n};\r\n","D:\\Bootcamp2020\\space-x\\src\\reportWebVitals.ts",[],"D:\\Bootcamp2020\\space-x\\src\\components\\Loader\\Loader.tsx",[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":28},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":3,"column":24,"nodeType":"60","messageId":"61","endLine":3,"endColumn":36},{"ruleId":"58","severity":1,"message":"67","line":3,"column":38,"nodeType":"60","messageId":"61","endLine":3,"endColumn":51},{"ruleId":"58","severity":1,"message":"68","line":15,"column":7,"nodeType":"60","messageId":"61","endLine":15,"endColumn":13},{"ruleId":"58","severity":1,"message":"69","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":20,"column":6,"nodeType":"72","endLine":20,"endColumn":10,"suggestions":"73"},"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"'ApolloClient' is defined but never used.","'InMemoryCache' is defined but never used.","'client' is assigned a value but never used.","'LaunchesQuery' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [id, refetch]",{"range":"79","text":"80"},[528,532],"[id, refetch]"]